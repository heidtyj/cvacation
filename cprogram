#include <stdio.h>
#include <string.h>

#define MAX_TASKS 10
#define MAX_TITLE 100

char tasks[MAX_TASKS][MAX_TITLE];
int taskCount = 0;

void addTask() {
    if (taskCount >= MAX_TASKS) {
        printf("더 이상 추가할 수 없습니다.\n");
        return;
    }

    printf("할 일 입력: ");
    getchar(); // 버퍼 정리
    fgets(tasks[taskCount], MAX_TITLE, stdin);
    tasks[taskCount][strcspn(tasks[taskCount], "\n")] = 0; // 개행 제거

    taskCount++;
    printf("추가하였습니다.\n");
}

void listTasks() {
    if (taskCount == 0) {
        printf("할 일이 없습니다.\n");
        return;
    }

    printf("할 일 목록:\n");
    for (int i = 0; i < taskCount; i++) {
        printf("%d. %s\n", i + 1, tasks[i]);
    }
}

void deleteTask() {
    if (taskCount == 0) {
        printf("지울 게 없습니다.\n");
        return;
    }

    int num;
    printf("삭제할 번호 입력: ");
    scanf("%d", &num);

    if (num < 1 || num > taskCount) {
        printf("없는 번호입니다.\n");
        return;
    }

    for (int i = num - 1; i < taskCount - 1; i++) {
        strcpy(tasks[i], tasks[i + 1]);
    }
    taskCount--;

    printf("지웠습니다.\n");
}

int main() {
    int choice;

    while (1) {
        printf("\n==== 할 일 관리 ====\n");
        printf("1. 추가\n");
        printf("2. 보기\n");
        printf("3. 삭제\n");
        printf("4. 종료\n");
        printf("선택 (1~4): ");
        scanf("%d", &choice);

        switch (choice) {
            case 1: addTask(); break;
            case 2: listTasks(); break;
            case 3: deleteTask(); break;
            case 4: 
                printf("종료합니다.\n");
                return 0;
            default:
                printf("다시 선택해 주세요.\n");
        }
    }

    return 0;
}
